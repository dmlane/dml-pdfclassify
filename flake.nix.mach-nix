{
  description = "dml-pdfclassify with mach-nix and stable Python";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-25.05";
    mach-nix.url = "github:DavHau/mach-nix";
    # Optionally pin mach-nix here, e.g.:
    # mach-nix.rev = "v0.7.0";
  };

  outputs =
    {
      self,
      nixpkgs,
      mach-nix,
      ...
    }:
    let
      systems = [
        "x86_64-linux"
        "aarch64-darwin"
      ];
      forAllSystems = nixpkgs.lib.genAttrs systems;

      pythonVersion = "3.13"; # ðŸ‘ˆ change this to test other versions
      selectPython =
        pkgs:
        {
          "3.11" = pkgs.python311;
          "3.12" = pkgs.python312;
          "3.13" = pkgs.python313;
        }
        ."${pythonVersion}";
    in
    {
      packages = forAllSystems (
        system:
        let
          pkgs = import nixpkgs { inherit system; };
          python = selectPython pkgs;
          machLib = import mach-nix { inherit pkgs; };
          pythonEnv = machLib.buildPythonPackage {
            python = pythonVersion;
            # Use poetry.lock or requirements.txt as needed
            poetryLock = ./poetry.lock;
          };
        in
        {
          default = pythonEnv;
        }
      );

      devShells = forAllSystems (
        system:
        let
          pkgs = import nixpkgs { inherit system; };
          python = selectPython pkgs;
          machLib = import mach-nix { inherit pkgs; };
          pythonEnv = machLib.buildPythonPackage {
            python = pythonVersion;
            poetryLock = ./poetry.lock;
          };
        in
        {
          default = pkgs.mkShell {
            packages = [
              pythonEnv
              pkgs.poetry
            ];
          };
        }
      );
    };
}
